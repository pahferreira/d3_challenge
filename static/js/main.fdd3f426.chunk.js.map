{"version":3,"sources":["services/API.js","hooks/countries.js","components/Commons/NavBar.js","components/Commons/MainContainer.js","components/Commons/Text.js","components/Homepage/styles.js","components/Commons/Content.js","components/Homepage/CountryCard.js","components/Homepage/Loader.js","components/Homepage/index.js","components/Countrypage/styles.js","components/Countrypage/index.js","App.js","serviceWorker.js","index.js"],"names":["getCountries","a","axios","get","response","console","log","data","CountryContext","createContext","CountryProvider","children","useState","countries","setCountries","selectedCountry","setselectedCountry","loading","setLoading","useEffect","API","Provider","value","selectCountry","country","borders","map","border","filter","alpha3Code","to","useCountry","useContext","NavBar","styled","Grid","theme","padding","height","maxHeight","backgroundColor","palette","background","second","boxShadow","MainContainer","minHeight","main","Typography","color","primary","fontFamily","typography","useStyles","makeStyles","container","borderRadius","overflow","margin","breakpoints","up","maxWidth","cursor","bold","fontWeight","bolder","media","width","filterSelect","borderColor","paddingBottom","filterLabel","searchAndFilter","searchInput","fontSize","down","marginBottom","formControl","minWidth","Content","React","memo","classes","item","className","xs","sm","md","lg","xl","onClick","process","style","textDecoration","CardMedia","image","flag","title","name","CardContent","Text","variant","component","population","displayType","thousandSeparator","region","capital","Loader","props","speed","viewBox","foregroundColor","x","y","rx","ry","filterValues","Homepage","filteredContries","setFilteredContries","setFilter","inputSearch","setInputSearch","toLowerCase","includes","matches","useMediaQuery","justify","direction","alignItems","CircularProgress","wrap","Input","id","placeholder","disableUnderline","onChange","e","target","startAdornment","InputAdornment","position","Select","MenuItem","length","key","backButton","textTransform","borderButton","backContainer","infoContainer","rightInfoContainer","Countrypage","Button","startIcon","src","alt","nativeName","subregion","topLevelDomain","currencies","currency","join","languages","language","darkMode","createMuiTheme","fontWeightRegular","fontWeightMedium","lightMode","App","isLightMode","setIsLightMode","ThemeProvider","prevState","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fdd3f426.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst getCountries = async () => {\r\n  try {\r\n    const response = await axios.get('https://restcountries.eu/rest/v2/all');\r\n    console.log(response);\r\n    if (response) {\r\n      return response.data;\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default { getCountries };\r\n","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport API from '../services/API';\r\n\r\nconst CountryContext = createContext(null);\r\n\r\nconst CountryProvider = ({ children }) => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [selectedCountry, setselectedCountry] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await API.getCountries();\r\n      if (data) {\r\n        setCountries(data);\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const selectCountry = (country) => {\r\n    const borders = country.borders.map((border) => {\r\n      const borderCountry = countries.filter(\r\n        (country) => country.alpha3Code === border\r\n      );\r\n      return borderCountry[0];\r\n    });\r\n    setselectedCountry({ ...country, borders });\r\n    return <Redirect to='/country' />;\r\n  };\r\n\r\n  return (\r\n    <CountryContext.Provider\r\n      value={{ selectCountry, countries, selectedCountry, loading }}\r\n    >\r\n      {children}\r\n    </CountryContext.Provider>\r\n  );\r\n};\r\n\r\nconst useCountry = () => {\r\n  const context = useContext(CountryContext);\r\n  return context;\r\n};\r\n\r\nexport { CountryProvider, useCountry };\r\n","import { Grid } from '@material-ui/core';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nconst NavBar = styled(Grid)(({ theme }) => {\r\n  return {\r\n    padding: '0 5%',\r\n    height: '15vh',\r\n    maxHeight: '80px',\r\n    backgroundColor: theme.palette.background.second,\r\n    boxShadow: `5px 5px 5px 0px ${theme.palette.boxShadow}`,\r\n  };\r\n});\r\n\r\nexport default NavBar;\r\n","import { Grid } from '@material-ui/core';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nconst MainContainer = styled(Grid)(({ theme }) => {\r\n  return {\r\n    minHeight: '100vh',\r\n    backgroundColor: theme.palette.background.main,\r\n  };\r\n});\r\n\r\nexport default MainContainer;\r\n","import { Typography } from '@material-ui/core';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nconst NavBar = styled(Typography)(({ theme }) => {\r\n  return {\r\n    color: theme.palette.primary.main,\r\n    fontFamily: theme.typography.fontFamily,\r\n  };\r\n});\r\n\r\nexport default NavBar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    container: {\r\n      backgroundColor: theme.palette.background.second,\r\n      boxShadow: `5px 5px 5px 0px ${theme.palette.boxShadow}`,\r\n      borderRadius: '10px',\r\n      height: '350px',\r\n      overflow: 'hidden',\r\n      margin: '30px 0',\r\n      [theme.breakpoints.up('sm')]: {\r\n        maxWidth: '250px',\r\n      },\r\n      [theme.breakpoints.up('lg')]: {\r\n        maxWidth: '275px',\r\n      },\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n      },\r\n    },\r\n    bold: {\r\n      fontWeight: '600',\r\n    },\r\n    bolder: {\r\n      fontWeight: '800',\r\n    },\r\n    media: {\r\n      width: '100%',\r\n      height: '50%',\r\n    },\r\n    filterSelect: {\r\n      width: '200px',\r\n      backgroundColor: theme.palette.background.second,\r\n      color: theme.palette.primary.main,\r\n      boxShadow: `5px 5px 5px 0px ${theme.palette.boxShadow}`,\r\n      borderColor: theme.palette.background.second,\r\n      paddingBottom: '17px',\r\n      height: '50px',\r\n    },\r\n    filterLabel: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    searchAndFilter: {\r\n      width: '100%',\r\n      margin: '20px 0',\r\n    },\r\n    searchInput: {\r\n      backgroundColor: theme.palette.background.second,\r\n      boxShadow: `5px 5px 5px 0px ${theme.palette.boxShadow}`,\r\n      padding: '10px 20px',\r\n      fontSize: '14px',\r\n      borderRadius: '5px',\r\n      color: theme.palette.primary.main,\r\n      width: '100%',\r\n      height: '100%',\r\n      [theme.breakpoints.down('md')]: {\r\n        marginBottom: '40px',\r\n      },\r\n    },\r\n    formControl: {\r\n      padding: '10px 20px',\r\n      minWidth: 120,\r\n    },\r\n  };\r\n});\r\n\r\nexport default useStyles;\r\n","import { Grid } from '@material-ui/core';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nconst Content = styled(Grid)(({ theme }) => {\r\n  return {\r\n    minHeight: '85vh',\r\n    padding: '20px 5%',\r\n    width: '100%',\r\n  };\r\n});\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport { CardContent, CardMedia, Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport Text from '../Commons/Text';\r\nimport useStyles from './styles';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst CountryCard = ({ country, selectCountry }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      className={classes.container}\r\n      xs={12}\r\n      sm={6}\r\n      md={4}\r\n      lg={3}\r\n      xl={3}\r\n      onClick={() => selectCountry(country)}\r\n    >\r\n      <Link\r\n        to={process.env.PUBLIC_URL + '/country'}\r\n        style={{ width: '100%', textDecoration: 'none' }}\r\n      >\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={country.flag}\r\n          title={country.name}\r\n        />\r\n        <CardContent>\r\n          <Text\r\n            variant='h6'\r\n            component='p'\r\n            fontFamily='Nunito Sans'\r\n            className={classes.bolder}\r\n          >\r\n            {country.name}\r\n          </Text>\r\n          <Text variant='body2'>\r\n            <span className={classes.bold}>Population:</span>{' '}\r\n            <NumberFormat\r\n              value={country.population}\r\n              displayType={'text'}\r\n              thousandSeparator={true}\r\n            />\r\n          </Text>\r\n          <Text variant='body2'>\r\n            <span className={classes.bold}>Region:</span> {country.region}\r\n          </Text>\r\n          <Text variant='body2'>\r\n            <span className={classes.bold}>Capital:</span> {country.capital}\r\n          </Text>\r\n        </CardContent>\r\n      </Link>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default React.memo(CountryCard);\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst Loader = (props) => (\r\n  <ContentLoader\r\n    speed={2}\r\n    width='100%'\r\n    height='100%'\r\n    viewBox='0 0 400 160'\r\n    backgroundColor='#e3e3e3'\r\n    foregroundColor='#ededed'\r\n    {...props}\r\n  >\r\n    <rect x='330' y='4' width='65' height='20' />\r\n    <rect x='1' y='4' width='130' height='20' />\r\n    <rect x='1' y='40' rx='3' ry='2' width='85' height='110' />\r\n    <rect x='104' y='40' rx='3' ry='2' width='85' height='110' />\r\n    <rect x='207' y='40' rx='3' ry='2' width='85' height='110' />\r\n    <rect x='310' y='40' rx='3' ry='2' width='85' height='110' />\r\n  </ContentLoader>\r\n);\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  CircularProgress,\r\n  Grid,\r\n  Input,\r\n  InputAdornment,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Search from '@material-ui/icons/Search';\r\nimport { useCountry } from '../../hooks/countries';\r\n// Commons\r\nimport Content from '../Commons/Content';\r\nimport Text from '../Commons/Text';\r\n// Components\r\nimport CountryCard from './CountryCard';\r\nimport Loader from './Loader';\r\n\r\nconst filterValues = {\r\n  ALL: 'Filter by Region',\r\n  AFRICA: 'Africa',\r\n  AMERICA: 'Americas',\r\n  ASIA: 'Asia',\r\n  EUROPE: 'Europe',\r\n  OCEANIA: 'Oceania',\r\n};\r\n\r\nconst Homepage = () => {\r\n  const classes = useStyles();\r\n  const { countries, selectCountry, loading } = useCountry();\r\n  const [filteredContries, setFilteredContries] = useState(countries);\r\n  const [filter, setFilter] = useState(filterValues.ALL);\r\n  const [inputSearch, setInputSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (filter === filterValues.ALL) {\r\n      return setFilteredContries(countries);\r\n    }\r\n    return setFilteredContries(\r\n      countries.filter((country) => country.region === filter)\r\n    );\r\n  }, [filter, countries]);\r\n\r\n  useEffect(() => {\r\n    return setFilteredContries(\r\n      countries.filter((country) =>\r\n        country.name.toLowerCase().includes(inputSearch.toLowerCase())\r\n      )\r\n    );\r\n  }, [inputSearch, countries]);\r\n\r\n  const matches = useMediaQuery('(min-width: 1024px)');\r\n\r\n  return (\r\n    <Content container justify='space-between'>\r\n      {loading ? (\r\n        matches ? (\r\n          <Loader />\r\n        ) : (\r\n          <Grid container direction='row' justify='center' alignItems='center'>\r\n            <CircularProgress />\r\n          </Grid>\r\n        )\r\n      ) : (\r\n        <>\r\n          <Grid\r\n            container\r\n            justify='space-between'\r\n            wrap='wrap'\r\n            alignItems='center'\r\n            className={classes.searchAndFilter}\r\n          >\r\n            <Grid item xs={12} sm={6} md={4} lg={4} xl={4}>\r\n              <Input\r\n                className={classes.searchInput}\r\n                id='search-input'\r\n                placeholder='Search for a country...'\r\n                disableUnderline\r\n                value={inputSearch}\r\n                onChange={(e) => setInputSearch(e.target.value)}\r\n                startAdornment={\r\n                  <InputAdornment position='start'>\r\n                    <Search fontSize='small' />\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </Grid>\r\n            <Select\r\n              variant='filled'\r\n              disableUnderline\r\n              value={filter}\r\n              onChange={(e) => setFilter(e.target.value)}\r\n              className={classes.filterSelect}\r\n            >\r\n              <MenuItem value={filterValues.ALL}>Filter by Region</MenuItem>\r\n              <MenuItem value={filterValues.AFRICA}>Africa</MenuItem>\r\n              <MenuItem value={filterValues.AMERICA}>America</MenuItem>\r\n              <MenuItem value={filterValues.ASIA}>Asia</MenuItem>\r\n              <MenuItem value={filterValues.EUROPE}>Europe</MenuItem>\r\n              <MenuItem value={filterValues.OCEANIA}>Oceania</MenuItem>\r\n            </Select>\r\n          </Grid>\r\n          <Grid container justify='space-between' style={{ height: '100%' }}>\r\n            {filteredContries.length > 0 ? (\r\n              filteredContries.map((country) => (\r\n                <CountryCard\r\n                  country={country}\r\n                  key={country.alpha3Code}\r\n                  selectCountry={selectCountry}\r\n                />\r\n              ))\r\n            ) : (\r\n              <Text>No countries found.</Text>\r\n            )}\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    backButton: {\r\n      backgroundColor: theme.palette.background.second,\r\n      color: theme.palette.primary.main,\r\n      boxShadow: `5px 5px 5px 0px ${theme.palette.boxShadow}`,\r\n      height: '40px',\r\n      padding: '10px 30px',\r\n      textTransform: 'capitalize',\r\n    },\r\n    borderButton: {\r\n      backgroundColor: theme.palette.background.second,\r\n      color: theme.palette.primary.main,\r\n      boxShadow: `5px 5px 5px 0px ${theme.palette.boxShadow}`,\r\n      margin: '5px',\r\n      padding: '5px 30px',\r\n    },\r\n    backContainer: {\r\n      marginBottom: '60px',\r\n    },\r\n    container: {\r\n      maxHeight: '400px',\r\n    },\r\n    image: {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n    infoContainer: {\r\n      maxHeight: '400px',\r\n      padding: '0 5% 0 0',\r\n    },\r\n    bold: {\r\n      fontWeight: '800',\r\n    },\r\n    rightInfoContainer: {\r\n      [theme.breakpoints.down('md')]: {\r\n        margin: '30px 0px',\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport useStyles from './styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport NumberFormat from 'react-number-format';\r\n// Hooks\r\nimport { useCountry } from '../../hooks/countries';\r\n// Commons\r\nimport Content from '../Commons/Content';\r\nimport Text from '../Commons/Text';\r\n\r\nconst Countrypage = () => {\r\n  const classes = useStyles();\r\n  const { selectedCountry } = useCountry();\r\n  const matches = useMediaQuery('(max-width: 600px)');\r\n\r\n  return !selectedCountry ? (\r\n    <Redirect to='/' />\r\n  ) : (\r\n    <Content container direction='column' alignItems='flex-start'>\r\n      <Grid container className={classes.backContainer}>\r\n        <Link to='/' style={{ textDecoration: 'none' }}>\r\n          <Button\r\n            className={classes.backButton}\r\n            startIcon={<KeyboardBackspaceIcon />}\r\n          >\r\n            Back\r\n          </Button>\r\n        </Link>\r\n      </Grid>\r\n      <Grid container justify='space-between'>\r\n        <Grid\r\n          container\r\n          item\r\n          xl={12}\r\n          sm={12}\r\n          md={5}\r\n          lg={5}\r\n          xl={5}\r\n          className={classes.container}\r\n        >\r\n          <img\r\n            src={selectedCountry.flag}\r\n            alt='Country Flag'\r\n            className={classes.image}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xl={12}\r\n          sm={12}\r\n          md={6}\r\n          lg={6}\r\n          xl={6}\r\n          className={classes.infoContainer}\r\n          direction={matches ? 'row' : 'column'}\r\n          justify='space-between'\r\n        >\r\n          <Grid container>\r\n            <Text variant='h5' component='h1'>\r\n              {selectedCountry.name}\r\n            </Text>\r\n            <Grid container justify='space-between'>\r\n              <Grid>\r\n                <Text variant='body2'>\r\n                  <span className={classes.bold}>Native Name:</span>{' '}\r\n                  {selectedCountry.nativeName}\r\n                </Text>\r\n                <Text variant='body2'>\r\n                  <span className={classes.bold}>Population:</span>{' '}\r\n                  <NumberFormat\r\n                    value={selectedCountry.population}\r\n                    displayType={'text'}\r\n                    thousandSeparator={true}\r\n                  />\r\n                </Text>\r\n                <Text variant='body2'>\r\n                  <span className={classes.bold}>Region:</span>{' '}\r\n                  {selectedCountry.region}\r\n                </Text>\r\n                <Text>\r\n                  <span className={classes.bold}>Sub Region:</span>{' '}\r\n                  {selectedCountry.subregion}\r\n                </Text>\r\n                <Text variant='body2'>\r\n                  <span className={classes.bold}>Capital:</span>{' '}\r\n                  {selectedCountry.capital}\r\n                </Text>\r\n              </Grid>\r\n              <Grid className={classes.rightInfoContainer}>\r\n                <Text variant='body2'>\r\n                  <span className={classes.bold}>Top Level Domain:</span>{' '}\r\n                  {selectedCountry.topLevelDomain}\r\n                </Text>\r\n                <Text variant='body2'>\r\n                  <span className={classes.bold}>Currencies:</span>{' '}\r\n                  {selectedCountry.currencies\r\n                    .map((currency) => currency.name)\r\n                    .join(', ')}\r\n                </Text>\r\n                <Text variant='body2'>\r\n                  <span className={classes.bold}>languages:</span>{' '}\r\n                  {selectedCountry.languages\r\n                    .map((language) => language.name)\r\n                    .join(', ')}\r\n                </Text>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            wrap={'wrap'}\r\n            direction={matches ? 'column' : 'row'}\r\n            alignItems={matches ? 'flex-start' : 'center'}\r\n            style={{ marginBottom: matches && '30px' }}\r\n          >\r\n            <Text className={classes.bold}>Border Countries:</Text>\r\n            {selectedCountry.borders.map((border) => (\r\n              <Button key={border.alpha3Code} className={classes.borderButton}>\r\n                {border.name}\r\n              </Button>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Countrypage;\r\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n// Hooks\nimport { CountryProvider } from './hooks/countries';\n// Commons\nimport NavBar from './components/Commons/NavBar';\nimport MainContainer from './components/Commons/MainContainer';\nimport Text from './components/Commons/Text';\n// Routes\nimport Homepage from './components/Homepage';\nimport Countrypage from './components/Countrypage';\n\nconst darkMode = createMuiTheme({\n  typography: {\n    fontFamily: ['Nunito Sans', 'sans-serif'].join(','),\n    fontWeightRegular: 300,\n    fontWeightMedium: 600,\n  },\n  palette: {\n    primary: { main: 'hsl(0, 0%, 100%)' },\n    background: {\n      main: 'hsl(207, 26%, 17%)',\n      second: 'hsl(209, 23%, 22%)',\n    },\n    boxShadow: 'rgba(18,18,18,0.57)',\n  },\n});\n\nconst lightMode = createMuiTheme({\n  typography: {\n    fontFamily: ['Nunito Sans', 'sans-serif'].join(','),\n    fontWeightRegular: 300,\n    fontWeightMedium: 600,\n  },\n  palette: {\n    primary: { main: 'hsl(200, 15%, 8%)' },\n    background: {\n      main: 'hsl(0, 0%, 98%)',\n      second: '#fff',\n    },\n    boxShadow: 'rgba(227,227,227,1)',\n  },\n});\n\nconst App = () => {\n  const [isLightMode, setIsLightMode] = useState(true);\n\n  return (\n    <ThemeProvider theme={isLightMode ? lightMode : darkMode}>\n      <CountryProvider>\n        <Router>\n          <MainContainer container>\n            <NavBar container justify='space-between' alignItems='center'>\n              <Link\n                to={process.env.PUBLIC_URL + '/'}\n                style={{ textDecoration: 'none' }}\n              >\n                <Text style={{ fontWeight: '800' }}>Where in the world?</Text>\n              </Link>\n              <Button\n                style={{\n                  textTransform: 'capitalize',\n                  color: isLightMode\n                    ? lightMode.palette.primary.main\n                    : darkMode.palette.primary.main,\n                }}\n                onClick={() => setIsLightMode((prevState) => !prevState)}\n                startIcon={<Brightness6Icon fontSize='small' />}\n              >\n                Dark Mode\n              </Button>\n            </NavBar>\n            <Grid container>\n              <Switch>\n                <Route exact path={process.env.PUBLIC_URL + '/'}>\n                  <Homepage />\n                </Route>\n                <Route exact path={process.env.PUBLIC_URL + '/country'}>\n                  <Countrypage />\n                </Route>\n              </Switch>\n            </Grid>\n          </MainContainer>\n        </Router>\n      </CountryProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}